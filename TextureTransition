Shader "Custom/TransitionShader"
{
    Properties
    {
        _MainTex("Texture", 2D) = "white" {}
        _SecondTex("SecondTexture", 2D) = "white" {}
        _TransitionPattern("Noise Texture", 2D) = "white" {}
        _TransitionLevel("Transition Level", Range(0,1)) = 1
    }
        SubShader
        {
            Tags { "RenderType" = "Opaque" }
            LOD 100

            Pass
            {
                CGPROGRAM
                #pragma vertex vert
                #pragma fragment frag

                #include "UnityCG.cginc"

                struct appdata
                {
                    float4 vertex : POSITION;
                    float2 uv : TEXCOORD0;
                };

                struct v2f
                {
                    float2 uv : TEXCOORD0;
                    float2 uv2 : TEXCOORD1;
                    float4 vertex : SV_POSITION;
                };

                sampler2D _MainTex;
                sampler2D _SecondTex;
                sampler2D _TransitionPattern;

                float4 _MainTex_ST;

                half _TransitionLevel;

                v2f vert(appdata v)
                {
                    v2f o;
                    o.vertex = UnityObjectToClipPos(v.vertex);
                    o.uv = TRANSFORM_TEX(v.uv, _MainTex);

                    return o;
                }

                fixed4 frag(v2f i) : SV_Target
                {
                    fixed4 mainTex = tex2D(_MainTex,i.uv);
                    fixed4 secondTex = tex2D(_SecondTex,i.uv);

                    //Defines the transition amount based on the mapped transition pattern and the transitionLevel
                    float transition = saturate(sign(_TransitionLevel - tex2D(_TransitionPattern, i.uv).r));

                    return lerp(mainTex, secondTex, transition);
                }
                ENDCG
            }
        }
}
